<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<concept xml:lang="en-us" id="ctunstats848901">
<title>How the optimizer determines the number of rows in a table</title>
<shortdesc>The optimizer uses a stored row count to determine the number of rows
in a table. The stored row count is maintained automatically by the
system.</shortdesc>
<prolog>
</prolog>
<conbody>
<p>Normally, an updated value is stored in the database whenever the database
goes through an orderly shutdown (as long as the database is not read-only).
Stored row counts become inaccurate if there is a non-orderly shutdown (for
example, a power failure or other type of system crash).</p>
<p>You can correct the optimizer's row count without shutting down the system;
<ph conref="../conrefs.dita#prod/productshortname"></ph> sets the stored row
count for a table to the correct value whenever a query that does a full scan on
the base conglomerate finishes. For example, executing the following query sets
the row count for table <codeph>Flights</codeph> to the correct value:</p>
<codeblock><b>SELECT * FROM Flights</b></codeblock>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> also sets the stored
row count on a table to the correct value whenever a user creates a new index or
a primary key, unique, or foreign key constraint on the table. This value is not
guaranteed to be written to disk.</p>
</conbody></concept>
