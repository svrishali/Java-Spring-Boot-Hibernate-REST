<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "../dtd/task.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<task id="tseccsecurenewextkey" xml:lang="en-us">
<title>Encrypting databases with a new external encryption key</title>
<shortdesc>You can apply a new external encryption key to a
<ph conref="../conrefs.dita#prod/productshortname"></ph> database by specifying
the <codeph>newEncryptionKey=<i>key</i></codeph> attribute on the connection URL
when you boot the database.</shortdesc>
<prolog><metadata>
<keywords>
<indexterm>encrypting databases<indexterm>new external key</indexterm></indexterm>
<indexterm>databases<indexterm>encrypting, new external key</indexterm></indexterm>
</keywords>
</metadata></prolog>
<taskbody>
<prereq><ul>
<li>If the database is configured with log archival for roll-forward recovery,
you must disable log archival and perform a shutdown before you can encrypt the
database with a new external encryption key. </li>
<li>If any global transaction are in the prepared state after recovery, the
database cannot be encrypted with a new encryption key.</li>
<li>If the database is currently encrypted with a boot password,
<xref href="tseccsecurenewbootpw.dita">use the
<codeph>newBootPassword=<i>newPassword</i></codeph> attribute</xref> to encrypt
the database.</li>
</ul></prereq>
<context><p>To encrypt a database with a new external encryption key:</p>
</context>
<steps>
<step><cmd>Specify the <codeph>newEncryptionKey=<i>key</i></codeph> attribute in
a URL and reboot the database.</cmd>
<stepxmp>For example, if you use the following URL to reboot the
<codeph>salesdb</codeph> database, the database is encrypted with the new
encryption key <codeph>6862636465666768</codeph>:
<codeblock>jdbc:derby:salesdb;encryptionKey=6162636465666768;
newEncryptionKey=6862636465666768'</codeblock>
</stepxmp>
<info>
<p>If <xref href="cseccsecure42374.dita">authentication</xref> and
<xref href="csecauthorfine.dita#csecauthorfine">SQL authorization</xref> are
both enabled, the credentials of the
<xref href="cseccsecuredbowner.dita">Database Owner</xref> must be supplied as
well, since encryption is a restricted operation.</p>
</info>
<info><p>After you change the encryption key, be sure to check for
<codeph>SQLWarning</codeph>s. The change succeeded only if there were no
<codeph>SQLWarning</codeph>s or <codeph>SQLException</codeph>s.</p>
<p>If you disabled log archival before you applied the new encryption key,
create a new backup of the database after the database is reconfigured with the
new encryption key. For more information, see the section "Backing up and
restoring databases" in the <ph conref="../conrefs.dita#pub/citadmin"></ph>,
particularly "Roll-forward recovery".</p></info>
</step>
</steps>
</taskbody>
</task>
