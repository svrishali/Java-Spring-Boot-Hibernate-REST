<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cseccsecuredecryptdb" xml:lang="en-us">
<title>Decrypting an encrypted database</title>
<shortdesc>You can return an encrypted database to an unencrypted state by
specifying attributes on the connection URL.</shortdesc>
<prolog><metadata>
<keywords>
<indexterm>encrypted databases<indexterm>decrypting</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>To decrypt an encrypted database, specify the
<codeph>decryptDatabase=true</codeph> attribute in conjunction with either the
<codeph>bootPassword=<i>key</i></codeph> attribute or the
<codeph>encryptionKey=<i>key</i></codeph> attribute.</p>
<p>See the <ph conref="../conrefs.dita#pub/citref"></ph> for details on the
connection URL attributes.</p>
<note othertype="Recommendation" type="other">Ensure that you have enough free
disk space before you decrypt a database. In addition to the disk space required
for the unencrypted size of the database, temporary disk space is required to
store the encrypted version of the data to restore the database to its encrypted
state if the decryption is interrupted or returns errors. All of the temporary
disk space is released back to the operating system after the database is
decrypted.</note>
<p>You must shut down the database before you decrypt it. An attempt to decrypt
a booted database has no effect.</p>
<p>If the database is configured with log archival, you must disable log
archival in addition to shutting down the database before you can decrypt the
database. You should also create a new backup of the database before you decrypt
it, and create another after you decrypt it. For more information, see the
section "Backing up and restoring databases" in the
<ph conref="../conrefs.dita#pub/citadmin"></ph>, particularly "Roll-forward
recovery".</p>
<p>If any global transactions are in the prepared state after recovery, the
database cannot be decrypted.</p>
<p>If <xref href="cseccsecure42374.dita">authentication</xref>
and <xref href="csecauthorfine.dita#csecauthorfine">SQL authorization</xref> are
both enabled, the credentials of the
<xref href="cseccsecuredbowner.dita">Database Owner</xref> must be supplied as
well, since decryption is a restricted operation.</p>
<p>After you decrypt the database, be sure to check for
<codeph>SQLWarning</codeph>s. The decryption succeeded only if there were no
<codeph>SQLWarning</codeph>s or <codeph>SQLException</codeph>s.</p>
</conbody>
</concept>
