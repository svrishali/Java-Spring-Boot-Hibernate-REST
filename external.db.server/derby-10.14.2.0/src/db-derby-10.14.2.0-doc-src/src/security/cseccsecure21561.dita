<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cseccsecure21561" xml:lang="en-us">
<title>Specifying authentication with a user-defined class</title>
<shortdesc>You can set the <codeph>derby.authentication.provider</codeph>
property to the full name of a class that implements the public interface
<codeph>org.apache.derby.authentication.UserAuthenticator</codeph>.</shortdesc>
<prolog><metadata>
<keywords>
<indexterm>user authentication<indexterm>providing your own</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>By writing your own class that fulfills some minimal requirements, you can
hook <ph conref="../conrefs.dita#prod/productshortname"></ph> up to an external
authentication service other than LDAP. To do so, specify an external
authentication service by setting the property
<codeph>derby.authentication.provider</codeph> to a class name that you want
<ph conref="../conrefs.dita#prod/productshortname"></ph> to load at startup.</p>
<p>The class that provides the external authentication service must implement
the public interface
<codeph>org.apache.derby.authentication.UserAuthenticator</codeph> and throw
exceptions of the type <codeph>java.sql.SQLException</codeph> where
appropriate.</p>
<p>Using a user-defined class makes
<ph conref="../conrefs.dita#prod/productshortname"></ph> adaptable to various
naming and directory services.</p>
</conbody>
</concept>
