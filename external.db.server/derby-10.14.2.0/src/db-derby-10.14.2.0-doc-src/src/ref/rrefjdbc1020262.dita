<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefjdbc1020262" xml:lang="en-us">
<title>JDBC escape syntax </title>
<shortdesc>JDBC provides a way of smoothing out some of the differences in the
ways different DBMS vendors implement SQL. This is called escape
syntax.</shortdesc>
<prolog><metadata>
<keywords><indexterm>JDBC escape syntax</indexterm><indexterm>Escape syntax
(JDBC)</indexterm></keywords>
</metadata></prolog>
<refbody>
<section><p>Escape syntax signals that the JDBC driver, which is provided by a
particular vendor, scans for any escape syntax and converts it into the code
that the particular database understands. This makes escape syntax
DBMS-independent.</p></section>
<section><p>A JDBC escape clause begins and ends with curly braces. A keyword
always follows the opening curly brace:</p></section>
<example> <codeblock><b>{ <b><i>keyword</i></b> }</b></codeblock></example>
<section><p>The JDBC escape keywords are case-insensitive.</p></section>
<section><p>Other JDBC escape keywords are not supported.   <note><ph conref="../conrefs.dita#prod/productshortname"></ph> returns
the SQL unchanged in the <i>Connection.nativeSQL</i> call, since the escape
syntax is native to SQL. In addition, it is unnecessary to call <i>Statement.setEscapeProcessing</i> for
this reason.</note></p></section>
</refbody>
</reference>

