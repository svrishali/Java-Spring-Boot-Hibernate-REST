<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefsyscsinvalidatestoredstmts" xml:lang="en-us">
<title>SYSCS_UTIL.SYSCS_INVALIDATE_STORED_STATEMENTS system procedure</title>
<shortdesc>The <codeph>SYSCS_UTIL.SYSCS_INVALIDATE_STORED_STATEMENTS</codeph>
system procedure invalidates all stored prepared statements (that is, all
statements in the SYSSTATEMENTS system table).</shortdesc>
<refbody>
<section><p>The next time one of the invalid stored prepared statements in the
<xref href="rrefsistabs33768.dita#rrefsistabs33768"></xref> is executed, it will
be recompiled, and a new plan will be generated for it.</p>
<p>Run <codeph>SYSCS_UTIL.SYSCS_INVALIDATE_STORED_STATEMENTS</codeph> whenever
you think that your metadata queries or triggers are misbehaving -- for example,
if they throw <codeph>java.lang.NoSuchMethodError</codeph> or
<codeph>java.lang.NoSuchMethodException</codeph> on execution.
<ph conref="../conrefs.dita#prod/productshortname"></ph> stores plans for
triggers and metadata queries in the database. These should be invalidated
automatically on upgrade and at other necessary times. Should you encounter an
instance where they are not, you have found a bug that you should report, but
one that you can likely work around by running
<codeph>SYSCS_UTIL.SYSCS_INVALIDATE_STORED_STATEMENTS</codeph>.</p></section>
<section><title>Syntax</title>
<codeblock>SYSCS_UTIL.SYSCS_INVALIDATE_STORED_STATEMENTS()</codeblock>
<p>No result is returned by this procedure.</p></section>
<section><title>Execute privileges</title>
<p>If authentication and SQL authorization are both enabled, only the
<xref href="rrefattrib26867.dita#rrefattrib26867">database owner</xref> has
execute privileges on this procedure by default. See "Configuring user
authentication" and "Configuring user authorization" in the
<ph conref="../conrefs.dita#pub/citsec"></ph> for more information. The
database owner can grant access to other users.</p>
</section>
<section><title>JDBC example</title>
<codeblock>CallableStatement cs = conn.prepareCall
("CALL SYSCS_UTIL.SYSCS_INVALIDATE_STORED_STATEMENTS()");
cs.execute();
cs.close();</codeblock></section>
<section><title>SQL Example</title>
<codeblock>CALL SYSCS_UTIL.SYSCS_INVALIDATE_STORED_STATEMENTS();</codeblock>
</section>
</refbody>
</reference>
