<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefsyscsdiagerrorlogreader" xml:lang="en-us">
<title>SYSCS_DIAG.ERROR_LOG_READER diagnostic table function</title>
<shortdesc>The SYSCS_DIAG.ERROR_LOG_READER diagnostic table function contains all the
useful SQL statements that are in the <codeph>derby.log</codeph> file or a
log file that you specify.</shortdesc>
<prolog><metadata>
<keywords>
<indexterm>diagnostic table functions<indexterm>SYSCS_DIAG.ERROR_LOG_READER</indexterm></indexterm>
<indexterm>SYSCS_DIAG.ERROR_LOG_READER diagnostic table function</indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section>
<p>One use of this diagnostic table function is to determine the active
transactions and the SQL statements in those transactions at a given point in
time. For example, if a deadlock or lock timeout occurred, you can find the
timestamp (timestampConstant) in the error log.</p>
<p>For a database for which authentication and SQL authorization are both
enabled, only the
<xref href="rrefattrib26867.dita#rrefattrib26867">database owner</xref> can
access this diagnostic table function. See "Configuring user authentication"
and "Configuring user authorization" in the
<ph conref="../conrefs.dita#pub/citsec"></ph> for more information.</p>
<p>To access the SYSCS_DIAG.ERROR_LOG_READER diagnostic table function, you must
use the SQL table function syntax.</p>
<p>For example:<codeblock>SELECT * 
    FROM TABLE (SYSCS_DIAG.ERROR_LOG_READER()) 
    AS T1</codeblock>
where T1 is a user-specified table name that is any valid identifier.</p>
<p>You can specify a log file name as an optional argument to the
SYSCS_DIAG.ERROR_LOG_READER diagnostic table function. When you specify a log
file name, the file name must be an expression whose data type maps to a Java
string.</p>
<p>For example:<codeblock>SELECT * 
    FROM TABLE (SYSCS_DIAG.ERROR_LOG_READER('myderbyerrors.log')) 
    AS T1</codeblock></p>
<p><note type="tip"> By default,
<ph conref="../conrefs.dita#prod/productshortname"></ph> log files contain only
boot, shutdown, and error messages. See the
<codeph><xref href="rrefproper26985.dita#rrefproper26985">derby.stream.error.logSeverityLevel</xref></codeph>
property and the
<codeph><xref href="rrefproper43517.dita#rrefproper43517">derby.language.logStatementText</xref></codeph>
property for instructions on how to print more information to
<ph conref="../conrefs.dita#prod/productshortname"></ph> log files. You can then
query that information by using the SYSCS_DIAG.ERROR_LOG_READER diagnostic table
function.</note></p>
<p>The returned table has the columns shown in the following table.</p>
<table frame="all">
<title>Columns returned by the SYSCS_DIAG.ERROR_LOG_READER table function</title>
<desc>For the columns returned by the SYSCS_DIAG.ERROR_LOG_READER table function, this table provides its data type, its length in bytes, whether it is nullable, and a description of its contents.</desc>
<tgroup cols="5" colsep="1" rowsep="1">
<colspec colname="1" colnum="1" colwidth="31*"/>
<colspec colname="2" colnum="2" colwidth="17*"/>
<colspec colname="3" colnum="3" colwidth="11*"/>
<colspec colname="4" colnum="4" colwidth="12*"/>
<colspec colname="5" colnum="5" colwidth="29*"/>
<thead>
<row valign="bottom">
<entry colname="1">Column Name</entry>
<entry colname="2">Type</entry>
<entry colname="3">Length</entry>
<entry colname="4">Nullable</entry>
<entry colname="5">Contents</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="1">TS</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">26</entry>
<entry colname="4">false</entry>
<entry colname="5">The timestamp of the statement.</entry>
</row>
<row>
<entry colname="1">THREADID</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">40</entry>
<entry colname="4">false</entry>
<entry colname="5">The thread name.</entry>
</row>
<row>
<entry colname="1">XID</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">15</entry>
<entry colname="4">false</entry>
<entry colname="5">The transaction ID.</entry>
</row>
<row>
<entry colname="1">LCCID</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">15</entry>
<entry colname="4">false</entry>
<entry colname="5">The connection ID.</entry>
</row>
<row>
<entry colname="1">DATABASE</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">128</entry>
<entry colname="4">false</entry>
<entry colname="5">The database name.</entry>
</row>
<row>
<entry colname="1">DRDAID</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">50</entry>
<entry colname="4">true</entry>
<entry colname="5">The DRDA ID for network server session.</entry>
</row>
<row>
<entry colname="1">LOGTEXT</entry>
<entry colname="2">LONG VARCHAR</entry>
<entry colname="3">32,700</entry>
<entry colname="4">false</entry>
<entry colname="5">The text of the statement or commit or rollback.</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</refbody>
</reference>
