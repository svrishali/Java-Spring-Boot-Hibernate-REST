<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefsyscsdiagtransactiontable" xml:lang="en-us">
<title>SYSCS_DIAG.TRANSACTION_TABLE diagnostic table</title>
<shortdesc>The SYSCS_DIAG.TRANSACTION_TABLE diagnostic table shows all of the
transactions that are currently in the database.</shortdesc>
<prolog><metadata>
<keywords>
<indexterm>diagnostic tables<indexterm>SYSCS_DIAG.TRANSACTION_TABLE</indexterm></indexterm>
<indexterm>SYSCS_DIAG.TRANSACTION_TABLE diagnostic table</indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section>
<p>You can reference the SYSCS_DIAG.TRANSACTION_TABLE diagnostic table directly
in a statement. For example:
<codeblock>SELECT * FROM SYSCS_DIAG.TRANSACTION_TABLE</codeblock></p>
<p>When the SYSCS_DIAG.TRANSACTION_TABLE diagnostic table is referenced in a
statement, a snapshot of the transaction table is taken.  A snapshot is used so
that referencing the diagnostic table does not alter the normal timing and flow
of the application. It is possible that some transactions will be in a
transition state when the snapshot is taken.</p>
<p>For a database for which authentication and SQL authorization are both
enabled, only the
<xref href="rrefattrib26867.dita#rrefattrib26867">database owner</xref> can
access this diagnostic table. See "Configuring user authentication" and
"Configuring user authorization" in the
<ph conref="../conrefs.dita#pub/citsec"></ph> for more information.</p>
<p>The table has the columns shown in the following table.</p>
<table frame="all">
<title>Columns in the SYSCS_DIAG.TRANSACTION_TABLE table</title>
<desc>For the columns in the SYSCS_DIAG.TRANSACTION_TABLE table, this table provides its data type, its length in bytes, whether it is nullable, and a description of its contents.</desc>
<tgroup cols="5" colsep="1" rowsep="1">
<colspec colname="1" colnum="1" colwidth="31*"/>
<colspec colname="2" colnum="2" colwidth="17*"/>
<colspec colname="3" colnum="3" colwidth="11*"/>
<colspec colname="4" colnum="4" colwidth="12*"/>
<colspec colname="5" colnum="5" colwidth="29*"/>
<thead>
<row valign="bottom">
<entry colname="1">Column Name</entry>
<entry colname="2">Type</entry>
<entry colname="3">Length</entry>
<entry colname="4">Nullable</entry>
<entry colname="5">Contents</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="1">XID</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">15</entry>
<entry colname="4">false</entry>
<entry colname="5">The transaction id, which can be joined with the
lock table virtual table's XID. See
<xref href="rrefsyscsdiaglocktable.dita#rrefsyscsdiaglocktable"></xref>.</entry>
</row>
<row>
<entry colname="1">GLOBAL_XID</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">140</entry>
<entry colname="4">true</entry>
<entry colname="5">The global transaction ID, set only if this transaction is a
participant in a distributed transaction.</entry>
</row>
<row>
<entry colname="1">USERNAME</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">128</entry>
<entry colname="4">true</entry>
<entry colname="5">The user name (the default value is APP). May appear null if
the transaction is started by
<ph conref="../conrefs.dita#prod/productshortname"></ph>.</entry>
</row>
<row>
<entry colname="1">TYPE</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">30</entry>
<entry colname="4">false</entry>
<entry colname="5">Either 'UserTransaction' or an internal transaction spawned
by <ph conref="../conrefs.dita#prod/productshortname"></ph>.</entry>
</row>
<row>
<entry colname="1">STATUS</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">8</entry>
<entry colname="4">false</entry>
<entry colname="5">Either 'IDLE' or 'ACTIVE'. A transaction is IDLE only when it
is first created or right after it commits. Any transaction that holds or has
held any resource in the database is ACTIVE. Accessing the TransactionTable
virtual table without using the class alias will not activate the transaction.</entry>
</row>
<row>
<entry colname="1">FIRST_INSTANT</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">20</entry>
<entry colname="4">true</entry>
<entry colname="5">If null, this is a read-only transaction. If not null, this
is the first log record instant written by the transaction.</entry>
</row>
<row>
<entry colname="1">SQL_TEXT</entry>
<entry colname="2">VARCHAR</entry>
<entry colname="3">32,672</entry>
<entry colname="4">true</entry>
<entry colname="5">If null, this transaction is currently not being executed in
the database. If not null, this is the SQL statement currently being executed in
the database.</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</refbody>
</reference>
