<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefjdbc37352" xml:lang="en-us">
<title>Syntax of database connection URLs for applications with embedded
databases</title>
<shortdesc>For applications with embedded databases, the syntax of the database
connection URL is as follows.</shortdesc>
<prolog><metadata>
<keywords><indexterm>database connection URL<indexterm>syntax in embedded
mode</indexterm></indexterm>
<indexterm>subsubprotocol<indexterm>part of database connection URL
syntax</indexterm></indexterm>
<indexterm>classpath<indexterm>accessing read-only databases
from</indexterm></indexterm></keywords>
</metadata></prolog>
<refbody>
<section>
<codeblock><b>jdbc:derby:[<b><i>subsubprotocol:</i></b>][<i>databaseName</i>][;<b><i>attributes</i></b>]*</b></codeblock>
<p>This syntax has the following components.</p>
<ul>
<li><codeph>jdbc:derby:</codeph>
<p>In JDBC terminology, <codeph>derby</codeph> is the <i>subprotocol</i> for
connecting to a <ph conref="../conrefs.dita#prod/productshortname"></ph>
database. The subprotocol is always <codeph>derby</codeph> and does not vary.</p></li>
<li><i>subsubprotocol:</i>
<p><i>subsubprotocol</i> specifies where
<ph conref="../conrefs.dita#prod/productshortname"></ph> looks for a database:
in a directory, in memory, in a classpath, or in a jar file.
<i>subsubprotocol</i> is one of the following:</p>
<ul>
<li><codeph>directory</codeph>: The default, which need not be specified
explicitly. The database is in the file system, and the path name is either
relative to the system directory or absolute.</li>
<li><codeph>memory</codeph>: Databases exist only in main memory and are not
written to disk. An in-memory database may be useful when there is no need to
persist the database -- for example, in some testing situations. See "Using
in-memory databases" in the <ph conref="../conrefs.dita#pub/citdevelop"></ph>
for more information.</li>
<li><codeph>classpath</codeph>: Databases are treated as read-only databases,
relative to the <codeph>classpath</codeph> directory. All <i>databaseNames</i>
must begin with at least a slash, because you specify them "relative" to the
classpath directory or archive. (You do not have to specify
<codeph>classpath</codeph> as the subsubprotocol; it is implied.) See
"Accessing databases from the classpath" in the
<ph conref="../conrefs.dita#pub/citdevelop"></ph> for more information.</li>
<li><codeph>jar</codeph>: Databases are treated as read-only databases.
<i>DatabaseNames</i> might require a leading slash, because you specify them
"relative" to the jar file. See "Accessing databases from a jar or zip file" in
the <ph conref="../conrefs.dita#pub/citdevelop"></ph> for details.
<p><codeph>jar</codeph> requires an additional element immediately before the
database name:</p>
<codeblock>(<i>pathToArchive</i>)</codeblock>
<p><i>pathToArchive</i> is the path name of the jar or zip file that holds
the database.</p></li>
</ul>
</li>
<li><i>databaseName</i>
<p>Specify the <i>databaseName</i> to connect to an existing database or a new
one.</p>
<p>The <i>databaseName</i> value can be either an absolute path name or a
path name relative to the system directory. For example,
<codeph>thisDB</codeph>, <codeph>databases/thisDB</codeph>, and
<codeph>c:/databases/2014/january/thisDB</codeph> can all be valid values.
See "Connecting to databases" and its subsections in the
<ph conref="../conrefs.dita#pub/citdevelop"></ph>. The path separator in the
connection URL is a forward slash (<codeph>/</codeph>), even in Windows path
names. The <i>databaseName</i> value cannot contain a colon
(<codeph>:</codeph>), except for the colon after the drive name in a Windows
path name.</p></li>
<li><i>attributes</i>
<p>Specify zero or more database connection URL attributes as detailed in
<xref href="rrefjdbc10889.dita#rrefjdbc10889"></xref>.</p></li>
</ul>
</section>
</refbody>
</reference>
