<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefjdbc4_2sqltype" xml:lang="en-us">
<title>java.sql.SQLType interface</title>
<shortdesc>JDBC 4.2 introduces a new data type identifier,
<i>java.sql.SQLType</i>, to help databases describe data types which do not
appear in the ANSI/ISO SQL Standard. Databases which provide non-standard types
can provide their own implementations of <i>SQLType</i>.</shortdesc>
<prolog><metadata>
<keywords>
<indexterm>JDBC 4.2<indexterm>SQLType interface</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section>
<p>
JDBC 4.2 also supplies its own implementation, <i>java.sql.JDBCType</i>, which
provides an enum for each of the type identifiers in <i>java.sql.Types</i>.
</p><p>
<ph conref="../conrefs.dita#prod/productshortname"></ph> does not expose any
datatypes which are not represented by <i>JDBCType</i> enums. Therefore,
<ph conref="../conrefs.dita#prod/productshortname"></ph> does not need to
provide its own implementation of <i>SQLType</i>.
</p><p>
Overloads with <i>SQLType</i> arguments have been added to a few interfaces,
alongside the existing methods which take <i>int</i> type identifiers from
<i>java.sql.Types</i>. The affected interfaces are as follows:
</p>
<ul>
<li><i>java.sql.CallableStatement</i></li>
<li><i>java.sql.PreparedStatement</i></li>
<li><i>java.sql.ResultSet</i></li>
</ul>
<p>
With <ph conref="../conrefs.dita#prod/productshortname"></ph>, these methods
raise a <i>java.sql.SQLFeatureNotSupportedException</i> (SQLState 0A000) if the
caller passes in a bad <i>SQLType</i>, which can be either of the following:</p>
<ul>
<li>A <i>SQLType</i> from a foreign database; that is, a <i>SQLType</i> which is
not one of the <i>JDBCType</i> enums.</li>
<li>A <i>JDBCType</i> enum whose corresponding <i>int</i> type identifier (from
<i>java.sql.Types</i>) is not supported by
<ph conref="../conrefs.dita#prod/productshortname"></ph>. The supported
<i>int</i> type identifiers are documented in
<xref href="rrefjdbc20377.dita#rrefjdbc20377"></xref> and in the
<xref href="crefsqlj31068.dita#crefsqlj31068"></xref> section. The
<i>JDBCType</i> enums have the same names as their corresponding <i>int</i>
identifiers in <i>java.sql.Types</i>.</li>
</ul>
</section>
</refbody>
</reference>
