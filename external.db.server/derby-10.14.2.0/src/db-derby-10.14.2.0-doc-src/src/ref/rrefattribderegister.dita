<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefattribderegister" xml:lang="en-us">
<title>deregister=false attribute</title>
<shortdesc>The <i>deregister=false</i> attribute, if set to <i>true</i> (the
default), deregisters the embedded JDBC driver from the <i>DriverManager</i>
after a shutdown, so that the
<ph conref="../conrefs.dita#prod/productshortname"></ph> classes can be
garbage-collected.</shortdesc>
<prolog><metadata>
<keywords><indexterm>deregister=false database connection URL attribute</indexterm>
<indexterm>embedded driver<indexterm>deregistering</indexterm></indexterm>
<indexterm>driver<indexterm>deregistering embedded</indexterm></indexterm>
<indexterm>attributes<indexterm>deregister</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section>
<p>If you are running with a security manager on JDK 8 or higher, you must grant
the following permission to <i>derby.jar</i> to allow the JDBC driver to be
deregistered:</p>
<codeblock>permission java.sql.SQLPermission "deregisterDriver";</codeblock>
<p>See "Configuring Java security" in the
<ph conref="../conrefs.dita#pub/citsec"></ph> for details. If you do not grant
this permission when using a security manager, an error message and stack trace
will appear in <i>derby.log</i> on shutdown, and the embedded JDBC driver
will remain registered.</p>
<p>If you are running with a security manager on JDK 6 or 7, you do not
need to set this permission.</p> 
<p>You initially register the embedded driver by calling a <i>DriverManager</i>
method such as <i>DriverManager.getDrivers()</i> or
<i>DriverManager.getConnection()</i>.</p>
<p>Once the embedded driver is registered, you can shut down the
<ph conref="../conrefs.dita#prod/productshortname"></ph> engine by using the
<i><xref href="rrefattrib16471.dita">shutdown=true</xref></i> connection URL
attribute. If you also specify <i>deregister=false</i> with the shutdown URL,
the following will happen:</p>
<ul>
<li>The embedded driver will remain registered.</li>
<li>The <ph conref="../conrefs.dita#prod/productshortname"></ph> classes will
<b>not</b> be garbage-collected.</li>
<li>You can get a <ph conref="../conrefs.dita#prod/productshortname"></ph>
connection by issuing a call to <i>DriverManager.getConnection()</i>.</li>
</ul>
<p>In contrast, if you use the default setting of <i>deregister=true</i> when
you shut down the database, the following will happen:</p>
<ul>
<li>The embedded driver will be deregistered.</li>
<li>The <ph conref="../conrefs.dita#prod/productshortname"></ph> classes will be
garbage-collected.</li>
<li>You will have to call
<i>Class.forName("org.apache.derby.jdbc.EmbeddedDriver").newInstance()</i>
before you obtain a new <ph conref="../conrefs.dita#prod/productshortname"></ph>
connection by calling <i>DriverManager.getConnection()</i>.</li>
</ul>
<p>This attribute has no meaning if it is used with the network driver.</p>
</section>
<section><title>Combining with other attributes</title>
<p>This attribute is valid only when issued in conjunction with the 
<i>shutdown=true</i> attribute.</p>
</section>
<example><title>Examples</title>
<codeblock><b>-- shut down salesDB and deregister the driver
jdbc:derby:salesDB;shutdown=true
-- shut down salesDB, but do not deregister the driver
jdbc:derby:salesDB;shutdown=true;deregister=false</b></codeblock>
</example>
</refbody>
</reference>
