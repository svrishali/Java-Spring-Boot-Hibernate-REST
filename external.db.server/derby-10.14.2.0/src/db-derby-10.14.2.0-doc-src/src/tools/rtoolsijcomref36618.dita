<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "../dtd/reference.dtd">
<reference xml:lang="en-us" id="rtoolsijcomref36618">
<title>Get Cursor command</title>
<shortdesc>The <codeph>Get Cursor</codeph> command creates a cursor with the
name of the specified <i>Identifier</i> by issuing a
<i>java.sql.Statement.executeQuery</i> request on the value of the specified
<i>String</i>.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Get Cursor command</indexterm>
<indexterm>Cursors<indexterm>working with</indexterm></indexterm>
</keywords>
</metadata>
</prolog><refbody>
<section>
<p>If the <i>String</i> is a statement that does not generate a result set, the
behavior of the underlying database determines whether an empty result set or an
error is issued. If there is an error in executing the statement, no cursor is
created.</p>
<p><codeph>ij</codeph> sets the cursor name using a
<i>java.sql.Statement.setCursorName</i> request. Behavior with respect to
duplicate cursor names is controlled by the underlying database.
<ph conref="../conrefs.dita#prod/productshortname"></ph> does not allow multiple
open cursors with the same name.</p>
<p>Once a cursor has been created, you can use <codeph>ij</codeph>'s
<codeph><xref href="rtoolsijcomref11128.dita">Next</xref></codeph> and
<codeph><xref href="rtoolsijcomref24423.dita">Close</xref></codeph> commands to
step through its rows and (if the connection supports positioned update and
delete commands) to alter the rows.</p>
</section>
<refsyn><title>Syntax</title>
<codeblock><b>GET [ WITH { HOLD | NOHOLD } ] CURSOR <i><xref href="rtoolsijcomref40155.dita">Identifier</xref></i> AS <i><xref href="rtoolsijcomref34110.dita">String</xref></i></b></codeblock>
<p><codeph>WITH HOLD</codeph> is the default attribute of the cursor. For a
non-holdable cursor, use the <codeph>WITH NOHOLD</codeph> option.</p>
</refsyn>
<example><title>Examples</title>
<codeblock>ij&gt; -- autocommit needs to be off so that the positioned update
ij&gt; -- can see the cursor it operates against. 
ij&gt; <b>autocommit off;</b>
ij&gt; <b>get cursor menuCursor as
'SELECT * FROM menu FOR UPDATE OF price';</b>
ij&gt; <b>next menuCursor;</b>
COURSE    |ITEM                |PRICE          
-----------------------------------------------
entree    |lamb chop           |14             
ij&gt; <b>next menuCursor;</b>
COURSE    |ITEM                |PRICE          
-----------------------------------------------
dessert   |creme brulee        |6              
ij&gt; <b>UPDATE menu SET price=price+1 WHERE CURRENT OF menuCursor;</b>
1 row inserted/updated/deleted
ij&gt;<b> next menuCursor;</b>
COURSE    |ITEM                |PRICE          
-----------------------------------------------
appetizer |baby greens salad   |7              
ij&gt;<b> close menuCursor;</b>
ij&gt;<b> commit;</b>
ij&gt;</codeblock>
<codeblock>ij&gt; <b>connect 'jdbc:derby:memory:dummy;create=true;user=john'
    as john_conn;</b>
ij&gt; <b>create table john_tbl(c int);</b>
0 rows inserted/updated/deleted
ij&gt; <b>insert into john_tbl values(1),(2),(3);</b>
3 rows inserted/updated/deleted
ij&gt; <b>connect 'jdbc:derby:memory:dummy;user=fred' as fred_conn;</b>
ij(FRED_CONN)&gt; <b>get cursor john_cursor@john_conn
    as 'select * from john_tbl';</b>
ij(FRED_CONN)&gt; <b>next john_cursor@john_conn;</b>
C          
-----------
1          
ij(FRED_CONN)&gt; <b>next john_cursor@john_conn;</b>
C          
-----------
2          
ij(FRED_CONN)&gt; <b>next john_cursor@john_conn;</b>
C          
-----------
3          
ij(FRED_CONN)&gt; <b>next john_cursor@john_conn;</b>
No current row
ij(FRED_CONN)&gt; <b>close john_cursor@john_conn;</b>
ij(FRED_CONN)&gt; <b>disconnect all;</b>
ij&gt;
</codeblock>
</example></refbody></reference>
