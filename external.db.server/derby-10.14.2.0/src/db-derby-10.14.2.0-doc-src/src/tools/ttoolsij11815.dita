<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "../dtd/task.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<task id="ttoolsij11815" xml:lang="en-us">
<title>Starting ij</title>
<shortdesc><ph conref="../conrefs.dita#prod/productshortname"></ph> provides
batch and shell scripts for users in Windows and UNIX environments that can
be used to start <codeph>ij</codeph>.</shortdesc>
<taskbody>
<context>
<p>By calling the appropriate script, you can start <codeph>ij</codeph> and be
able to connect with a simple command. The scripts are found in the
<codeph>bin</codeph> directory of your
<ph conref="../conrefs.dita#prod/productshortname"></ph> installation. You can
also customize the <codeph>ij</codeph> scripts to suit your environment.</p>
<p>If you are using <ph conref="../conrefs.dita#prod/productshortname"></ph> as
a client/server environment, start the Network Server before connecting to the 
<ph conref="../conrefs.dita#prod/productshortname"></ph> database. (See
"Starting the Network Server" in the
<ph conref="../conrefs.dita#pub/citadmin"></ph> for details.) You can start
<codeph>ij</codeph> by running the <codeph>ij</codeph> scripts for your
environment. Follow the instructions in "Setting up your environment" in
<ph conref="../conrefs.dita#pub/citgetstart"></ph> to set the 
<codeph><ph conref="../conrefs.dita#prod/productinstallpath"></ph></codeph> 
and <codeph>JAVA_HOME</codeph> environment variables and to add
<codeph><ph conref="../conrefs.dita#prod/productinstallpath"></ph>/bin</codeph>
to your path. Then use the following command:</p><codeblock><b><userinput>ij [-p <varname>propertyFile</varname>] [<varname>inputFile</varname>]</userinput></b></codeblock></context>
<example>Alternatively, set the 
<codeph><ph conref="../conrefs.dita#prod/productinstallpath"></ph></codeph>
environment variable, then use one of these commands:
<codeblock>(UNIX) <b><userinput>java [<varname>options</varname>] -jar $DERBY_HOME/lib/derbyrun.jar ij
    [-p <varname>propertyFile</varname>] [<varname>inputFile</varname>]</userinput></b></codeblock>
<codeblock>(Windows) <b><userinput>java [<varname>options</varname>] -jar %DERBY_HOME%\lib\derbyrun.jar ij
    [-p <varname>propertyFile</varname>] [<varname>inputFile</varname>]</userinput></b></codeblock>
<codeblock><b><userinput>java [<varname>options</varname>] org.apache.derby.tools.ij 
    [-p <varname>propertyFile</varname>] [<varname>inputFile</varname>]</userinput></b></codeblock>
<p>If you use the last form of the command, be sure that
<codeph>derbyrun.jar</codeph> is in your classpath.</p>
<p>If you need to use other classes in addition to
<codeph>derbyrun.jar</codeph>, you cannot use the <codeph>-cp</codeph> argument
or the <codeph>CLASSPATH</codeph> environment variable to set
<codeph>CLASSPATH</codeph> variables when you are using the
<codeph>-jar</codeph> argument to start the <codeph>ij</codeph> tool. If you
want to run the <codeph>ij</codeph> tool with a custom classpath, you cannot use
the <codeph>-jar</codeph> argument. Instead, you have to  use the full class
name to start the <codeph>ij</codeph> tool
(<codeph>java org.apache.derby.tools.ij</codeph>). </p>
<p>The command line items are:</p>    <ul>
<li><b><userinput>java</userinput></b>
<p>Start the JVM.</p></li>
<li><b><userinput><varname>options</varname></userinput></b>
<p>The options that the JVM uses. You can use the <codeph>-D</codeph> option to
set <codeph>ij</codeph> properties (see
<xref href="ttoolsij30600.dita">Starting ij using properties</xref>) or system
properties, such as <ph conref="../conrefs.dita#prod/productshortname"></ph>
properties.</p></li>
<li><b><userinput><varname>propertyFile</varname></userinput></b>
<p>A file you can use to set <codeph>ij</codeph> properties (instead of the
<codeph>-D</codeph> option). The property file should be in the format created
by the <codeph>java.tools.Properties.save</codeph> methods, which is the same
format as the <codeph>derby.properties</codeph> file.</p></li>
<li><b><userinput><varname>inputFile</varname></userinput></b>
<p>A file from which to read commands. The <codeph>ij</codeph> tool exits at the
end of the file or an <codeph>exit</codeph> command. Using an input file causes
<codeph>ij</codeph> to print out the commands as it runs them. If you reroute
standard input, <codeph>ij</codeph> does not print out the commands. If you do
not supply an input file, <codeph>ij</codeph> reads from the standard input.</p></li>
</ul></example>
<postreq><p>For detailed information about <codeph>ij</codeph> commands, see
<xref href="rtoolsijcomref25570.dita">ij commands and errors
reference</xref>.</p>
</postreq>
</taskbody>
</task>
