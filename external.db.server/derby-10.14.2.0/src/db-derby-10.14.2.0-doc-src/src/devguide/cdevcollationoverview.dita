<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevcollationoverview" xml:lang="en-us">
<title>How collation works in
<ph conref="../conrefs.dita#prod/productshortname"></ph></title>
<shortdesc><ph conref="../conrefs.dita#prod/productshortname"></ph> supports a
wide range of character sets and encodes all of the character sets by using the
Unicode support provided by the <i>java.lang.Character</i> class in the Java
Virtual Machine (JVM) in which the
<ph conref="../conrefs.dita#prod/productshortname"></ph> database runs.
</shortdesc>
<prolog><metadata>
<keywords><indexterm>collation<indexterm>overview</indexterm></indexterm>
<indexterm></indexterm></keywords>
</metadata></prolog>
<conbody>
<section>
<p>See the Java API documentation for the <i>java.lang.Character</i> class for
the exact level of Unicode Standard that is supported.</p>
<p>A collation is a set of rules for comparing characters in a character set.
In <ph conref="../conrefs.dita#prod/productshortname"></ph>, the
collation rules affect comparisons of the CHAR and VARCHAR data types. Collation
rules also affect how the LIKE Boolean operator processes the CHAR, VARCHAR,
CLOB, and LONG VARCHAR data types.</p>
<p>The default <ph conref="../conrefs.dita#prod/productshortname"></ph>
collation rule is based on the binary Unicode values of the characters. So a
character is greater than (&gt;), equal to (=), or less than (&lt;) another
character based on the numeric comparison of the Unicode values. This rule
allows for very efficient comparisons of character strings.</p>
<note>When LIKE comparisons are used,
<ph conref="../conrefs.dita#prod/productshortname"></ph> compares one character
at a time for non-metacharacters. This is different from the way
<ph conref="../conrefs.dita#prod/productshortname"></ph> processes = 
comparisons. The comparisons with the = operator compare the entire character
string on the left side of the = operator with the entire character string on
the right side of the = operator. For details, see
<xref href="cdevcollationlikeequal.dita#cdevcollationlikeequal"></xref>.</note>
</section>
</conbody>
</concept>
