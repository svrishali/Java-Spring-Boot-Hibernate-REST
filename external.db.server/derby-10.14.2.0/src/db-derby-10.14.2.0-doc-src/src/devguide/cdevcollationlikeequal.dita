<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevcollationlikeequal" xml:lang="en-us">
<title>Differences between LIKE and equal (=) comparisons</title>
<shortdesc>When you use locale-based collation, the comparisons
can return different results when you use the LIKE and equal
(=) operators.</shortdesc>
<prolog><metadata>
<keywords><indexterm>collation<indexterm>LIKE and equal (=) comparisons</indexterm></indexterm>
<indexterm>LIKE comparisons<indexterm>collation and</indexterm></indexterm>
<indexterm>equal (=) comparisons<indexterm>collation and</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<section>
<p>For example, suppose that the
<ph conref="../conrefs.dita#prod/productshortname"></ph> database is set to use
a locale where the character 'z' has the same collation elements as 'xy'. 
Consider the following two WHERE clauses:</p>
<ol>
<li>WHERE 'zcb' = 'xycb'</li>
<li>WHERE 'zcb' LIKE 'xy_b'</li>
</ol>
<p>For WHERE clause 1, <ph conref="../conrefs.dita#prod/productshortname"></ph>
returns TRUE, because the collation elements for the entire string 'zcb' will
match the collation elements of the entire string 'xycb'.</p>
<p>For WHERE clause 2, <ph conref="../conrefs.dita#prod/productshortname"></ph>
returns FALSE, because the collation element for the character 'z' does not
match the collation element for the character 'x'. In addition, when a
metacharacter such as an underscore is used with the LIKE operator, the
metacharacter counts for one character in the string value. A clause such as
<codeph>WHERE 'xycb' LIKE '_cb'</codeph> returns FALSE, because
'x' is compared to the metacharacter '_' and 'y' does not match 'c'.</p>
</section>
</conbody>
</concept>
